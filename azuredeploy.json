{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "AS-Import-AD-Group-Users-to-MS-Watchlist", 
        "description": "This playbook is intended to be run on a schedule. It will add the users from a specified Azure Active Directory group to a Microsoft Sentinl watchlist.",
        "lastUpdateTime": "2022-10-27T18:18:05Z",
        "entities": ["IP"], 
        "tags": ["Microsoft Sentinel", "Watchlist", "Azure Active Directory", "Group"], 
        "support": {
            "tier": "developer"
        },
        "author": {
            "name": "Accelerynt"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "AS-Import-AD-Group-Users-to-MS-Watchlist",
            "type": "string"
        },
        "GroupId": {
            "type": "string",
            "metadata": {
                "description": "The object id of the desired Azure Active Directory group"
            }
        },
        "WatchlistName": {
            "type": "string",
            "defaultValue": "HighValueTargetList",
            "metadata": {
                "description": "The name of the Microsoft Sentinel watchlist to be created"
            }
        },
        "WatchlistDescription": {
            "type": "string",
            "defaultValue": "High Value Target users",
            "metadata": {
                "description": "Optional description of the Microsoft Sentinel watchlist to be created"
            }
        },
        "WorkspaceName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Microsoft Sentinel workspace the watchlist will be housed in"
            }
        }
    },
    "variables": {
        "azuread": "[concat('azuread-', parameters('PlaybookName'))]",
        "azuresentinel": "[concat('azuresentinel-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('workspaceName'), '/Microsoft.SecurityInsights/ReferenceTemplate')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "description": "[parameters('WatchlistDescription')]",
            "properties": {
                "displayName": "[parameters('WatchlistName')]",
                "watchlistAlias": "[parameters('WatchlistName')]",
                "source": "[concat(parameters('WatchlistName'),'.csv')]",
                "provider": "Accelerynt",
                "isDeleted": false,
                "labels": [
                ],
                "defaultDuration": "P1000Y",
                "contentType": "Text/Csv",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "id",
                "rawContent": "id,userPrincipalName\r\ninitial data,initial data\r\n"
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('azuread')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[parameters('PlaybookName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuread')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('azuresentinel')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[parameters('PlaybookName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "LogicAppsCategory": "security"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('azuread'))]",
                "[resourceId('Microsoft.Web/connections', variables('azuresentinel'))]"
            ],
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "evaluatedRecurrence": {
                                "frequency": "Day",
                                "interval": 1,
                                "schedule": {
                                    "hours": [
                                        "23"
                                    ]
                                }
                            },
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 1,
                                "schedule": {
                                    "hours": [
                                        "23"
                                    ]
                                }
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "For_each_-_Existing_watchlist_items": {
                            "foreach": "@body('Watchlists_-_Get_all_watchlist_Items_for_a_given_watchlist')?['properties']?['watchlistItems']",
                            "actions": {
                                "Append_to_array_variable": {
                                    "runAfter": {},
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "Watchlist IDs",
                                        "value": "@items('For_each_-_Existing_watchlist_items')?['properties.itemsKeyValue']?['id']"
                                    }
                                }
                            },
                            "runAfter": {
                                "Watchlists_-_Get_all_watchlist_Items_for_a_given_watchlist": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_-_Group_members": {
                            "foreach": "@body('Get_group_members')?['value']",
                            "actions": {
                                "Condition_-_Check_if_user_is_already_in_watchlist": {
                                    "actions": {},
                                    "runAfter": {},
                                    "else": {
                                        "actions": {
                                            "Watchlists_-_Add_a_new_watchlist_item": {
                                                "runAfter": {},
                                                "type": "ApiConnection",
                                                "inputs": {
                                                    "body": {
                                                        "id": "@{items('For_each_-_Group_members')?['id']}",
                                                        "userPrincipalName": "@{items('For_each_-_Group_members')?['userPrincipalName']}"
                                                    },
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                        }
                                                    },
                                                    "method": "put",
                                                    "path": "[concat('/Watchlists/subscriptions/@{encodeURIComponent(', subscription().subscriptionId, ')}/resourceGroups/@{encodeURIComponent(', resourceGroup().name, ')}/workspaces/@{encodeURIComponent(''', parameters('WorkspaceName'), ''')}/watchlists/@{encodeURIComponent(''', parameters('WatchlistName'), ''')}/watchlistItem')]"
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@contains(variables('Watchlist IDs'), items('For_each_-_Group_members')?['id'])",
                                                    "@true"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "For_each_-_Existing_watchlist_items": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_group_members": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuread']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "[concat('/v1.0/groups/@{encodeURIComponent(''', parameters('GroupId', ''')}/members')]"
                            }
                        },
                        "Initialize_variable_-_Watchlist_IDs": {
                            "runAfter": {
                                "Get_group_members": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Watchlist IDs",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Watchlists_-_Get_all_watchlist_Items_for_a_given_watchlist": {
                            "runAfter": {
                                "Initialize_variable_-_Watchlist_IDs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "[concat('/Watchlists/subscriptions/@{encodeURIComponent(', subscription().subscriptionId, ')}/resourceGroups/@{encodeURIComponent(', resourceGroup().name, ')}/workspaces/@{encodeURIComponent(''', parameters('WorkspaceName'), ''')}/watchlists/@{encodeURIComponent(''', parameters('WatchlistName'), ''')}/watchlistItem')]"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuread": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azuread'))]",
                                "connectionName": "[variables('azuread')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuread')]"
                            },
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azuresentinel'))]",
                                "connectionName": "[variables('azuresentinel')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    ]
}